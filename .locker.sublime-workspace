{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"get",
				"get_pin	function"
			],
			[
				"len",
				"length	param"
			],
			[
				"create_",
				"create_tables	function"
			],
			[
				"sta",
				"staticmethod	class"
			],
			[
				"cre",
				"create_tables_if_needed	function"
			],
			[
				"acti",
				"active"
			],
			[
				"date",
				"datetime	class"
			],
			[
				"get_",
				"get_or_create	function"
			],
			[
				"cham",
				"chamber_id	statement"
			],
			[
				"chamber",
				"chamber_id	param"
			],
			[
				"In",
				"IntegrityError	class"
			],
			[
				"Inte",
				"IntegrityError	class"
			],
			[
				"chamb",
				"chamber_id	param"
			],
			[
				"hy",
				"hybrid_property	class"
			],
			[
				"creat",
				"create_user	function"
			],
			[
				"for",
				"ForeignKeyField	class"
			],
			[
				"impor",
				"import"
			],
			[
				"ut",
				"utcnow"
			],
			[
				"utc",
				"utcnow	function"
			],
			[
				"da",
				"datetime	class"
			],
			[
				"drop",
				"drop_tables	function"
			],
			[
				"Cha",
				"CharField	class"
			],
			[
				"Bas",
				"BaseModel	class"
			],
			[
				"For",
				"ForeignKeyField	class"
			],
			[
				"c",
				"create_tables	function"
			],
			[
				"ch",
				"chambers	statement"
			],
			[
				"class",
				"class	New Class"
			],
			[
				"Remi",
				"ReminderForm	class"
			],
			[
				"status_un",
				"status_unexpected"
			],
			[
				"font-",
				"font-size"
			],
			[
				"mar",
				"margin-bottom"
			],
			[
				"te",
				"TextField	class"
			],
			[
				"context",
				"context	get_context_data"
			],
			[
				"Venu",
				"VenueAdmin	class"
			],
			[
				"Mod",
				"ModelAdmin	class"
			],
			[
				"Clien",
				"ClientDetailAdmin	class"
			],
			[
				"max",
				"max_length"
			],
			[
				"margin-",
				"margin-right"
			],
			[
				"is",
				"is_online	statement"
			],
			[
				"hou",
				"hours_since	statement"
			],
			[
				"uni",
				"unicode	class"
			],
			[
				"file",
				"filepath	param"
			],
			[
				"load",
				"load_from_file	function"
			],
			[
				"get_da",
				"get_datetime_since	function"
			],
			[
				"last_",
				"last_opened	statement"
			],
			[
				"conv",
				"convert_to_utc"
			],
			[
				"venue",
				"venues"
			],
			[
				"last_fo",
				"last_four"
			],
			[
				"timest",
				"time_string"
			],
			[
				"aw",
				"aware_datetime"
			],
			[
				"DEFAULT_",
				"DEFAULT_TZ"
			],
			[
				"time",
				"timezone"
			],
			[
				"tz",
				"tzinfo"
			],
			[
				"pars",
				"parsed_tz"
			],
			[
				"parse",
				"parse_time"
			],
			[
				"naive_",
				"naive_time	param"
			],
			[
				"nai",
				"naive_datetime	param"
			],
			[
				"naive",
				"naive_datetime"
			],
			[
				"dict",
				"dictConfig	function"
			],
			[
				"logger",
				"logger_config"
			],
			[
				"LOGG",
				"LOGGER_CONFIG"
			],
			[
				"set",
				"setLevel	function"
			],
			[
				"logg",
				"logging	module"
			],
			[
				"log",
				"logger_init	module"
			],
			[
				"templ",
				"template	module"
			],
			[
				"Man",
				"ManyToManyField	class"
			],
			[
				"on",
				"on_delete	param"
			],
			[
				"pas",
				"password_reset_done"
			],
			[
				"pass",
				"password_reset"
			],
			[
				"rgb",
				"rgba()"
			],
			[
				"back",
				"background-color"
			],
			[
				"paddi",
				"padding-top"
			],
			[
				"text-",
				"text-align"
			],
			[
				"rb",
				"rgba()"
			],
			[
				"port",
				"portal"
			],
			[
				"ex",
				"executable	instance"
			],
			[
				"ite",
				"iteritems	function"
			],
			[
				"group",
				"group	function"
			],
			[
				"TOK",
				"TOKENS_GROUP_PAT	statement"
			],
			[
				"TO",
				"TOKENS_GROUP_PAT	statement"
			],
			[
				"add",
				"add_child"
			],
			[
				"iter",
				"iter_child"
			],
			[
				"data",
				"data_dict"
			],
			[
				"child",
				"children"
			],
			[
				"yie",
				"yields"
			],
			[
				"pag",
				"page_number_text"
			],
			[
				"pd",
				"pdf_page_number"
			],
			[
				"PDF",
				"PDF-PAGE"
			],
			[
				"bas",
				"bastard	statement"
			],
			[
				"pri",
				"print_pdf"
			],
			[
				"prin",
				"print_node	function"
			],
			[
				"ig",
				"IGNORECASE	statement"
			],
			[
				"is_en",
				"is_entry	statement"
			],
			[
				"PA",
				"PAGE_STR	statement"
			],
			[
				"leve",
				"level3"
			],
			[
				"coer",
				"coerce_data	function"
			],
			[
				"d",
				"d	statement"
			],
			[
				"PHON",
				"PHONE_START	statement"
			],
			[
				"a",
				"append"
			],
			[
				"bast",
				"bastard_lines_start	statement"
			],
			[
				"Exc",
				"Exception	class"
			],
			[
				"TR",
				"TRANSACTION_CATEGORIES_ALL	statement"
			],
			[
				"PR",
				"PREVIOUS_PERIOD	statement"
			],
			[
				"get_ch",
				"get_child_by_name	function"
			],
			[
				"Pr",
				"PRICE	statement"
			],
			[
				"tr",
				"TRANSACTION_LINE"
			],
			[
				"last",
				"last_added	statement"
			],
			[
				"tra",
				"TRANSACTION_CATEGORIES_ALL	statement"
			],
			[
				"PH",
				"PHONE_START	statement"
			],
			[
				"las",
				"last_level2_added	statement"
			],
			[
				"CONT",
				"CONTRACT_TYPE	statement"
			],
			[
				"CON",
				"CONTRACT_TYPE	statement"
			],
			[
				"Or",
				"OrderedDict	class"
			],
			[
				"get_p",
				"get_parent_name	function"
			],
			[
				"no",
				"node_json"
			],
			[
				"Not",
				"NotImplemented	instance"
			],
			[
				"json",
				"json_dict	function"
			],
			[
				"J",
				"reprJSON"
			],
			[
				"it",
				"iter_tree_down"
			],
			[
				"key",
				"keys	function"
			],
			[
				"grou",
				"group	function"
			],
			[
				"PHO",
				"PHONE	statement"
			],
			[
				"page",
				"page_marker_match	statement"
			],
			[
				"SMS",
				"SMS_START	statement"
			],
			[
				"get__",
				"get_last_child	function"
			],
			[
				"get_l",
				"get_last_child	function"
			],
			[
				"SU",
				"SUMMARY_START	statement"
			],
			[
				"open",
				"open_picle	function"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "from peewee import SqliteDatabase, Model\nfrom peewee import CharField, IntegerField, ForeignKeyField, BooleanField\nfrom peewee import DateTimeField\nfrom peewee import OperationalError, IntegrityError\nfrom playhouse.hybrid import hybrid_property\n\nfrom datetime import datetime\n\ndb = SqliteDatabase('locker.db')\ndb.connect()\n\nclass BaseModel(Model):\n    class Meta:\n        database = db\n\nclass User(BaseModel):\n    pin = CharField(primary_key=True)\n    active = BooleanField(default = False)\n\n    def __repr__(self):\n        return '<USER> PIN:{}'.format(self.pin)\n\n    @staticmethod\n    @db.atomic()\n    def create_user(pin):\n        user, was_created = User.create_or_get(pin=pin)\n        if was_created:\n            user.save()\n        return user\n\n\nclass Chamber(BaseModel):\n    chamber_id = IntegerField(primary_key=True)\n    user = ForeignKeyField(User, related_name=\"chambers\", null=True)\n    status = CharField(default='virgin')\n\n    @hybrid_property\n    def occupied(self):\n        return bool(self.user)\n\n    @hybrid_property\n    def available(self):\n        return not self.occupied\n\n    def reserve(self, user):\n        user.active = True\n        user.save()\n        self.user = user\n        self.status = 'reserved'\n        self.save()\n\n        print('Chamber Reserved: ', self)\n\n    def release(self):\n        self.user.active = False\n        self.user.save()\n        self.user = None\n        self.status = 'available'\n        self.save()\n\n        print('Chamber Released: ', self)\n\n    def __repr__(self):\n        return '<CHAMBER {}:{}>:{}:{}'.format(self.chamber_id, self.occupied,\n                                           self.status, self.user )\n    @staticmethod\n    @db.atomic()\n    def get_or_create_chamber(chamber_id):\n        chamber, was_created = Chamber.get_or_create(chamber_id=chamber_id)\n        if was_created: chamber.save()\n        return chamber\n\n\nclass Operation(BaseModel):\n    timestamp = DateTimeField(primary_key=True, default=datetime.utcnow())\n    user = ForeignKeyField(User, related_name=\"operations\")\n    chamber = ForeignKeyField(Chamber, related_name='chamber')\n    action = CharField(null=True)\n    locker = CharField(default='Dev Locker')\n\n    def __repr__(self):\n        return '<TRANSACTION> {}'.format(self.timestamp)\n\n@db.atomic()\ndef add_operation(chamber, action, user):\n    now = datetime.utcnow()\n    op = Operation.create(timestamp=now, chamber=chamber,\n                          action=action, user=user)\n    op.save()\n    return op\n\n# this creates indexes, not sure why\ntables = [User, Operation, Chamber]\ndb.create_tables(tables, True)\n\n# ERASE TABLES\ndef drop_tables():\n    try:\n        db.drop_tables(tables)\n    except:\n        pass\n",
			"file": "model.py",
			"file_size": 2698,
			"file_write_time": 131023011053880580,
			"settings":
			{
				"buffer_size": 2698,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "import model\nfrom model import Operation, User, Chamber\nfrom key import get_pin\n\nclass Locker(object):\n\n    def __init__(self, capacity):\n        print('Locker Initialized.')\n        self.chambers = [Chamber.get_or_create_chamber(n) for n in range(capacity)]\n        print('Locker Created: ', self)\n\n    @property\n    def available_chambers(self):\n        return [chamber for chamber in self.chambers if chamber.available]\n\n    @property\n    def occupied_chambers(self):\n        return [chamber for chamber in self.chambers if chamber.occupied]\n\n    def find_available_chamber(self):\n        try:\n            return self.available_chambers[0]\n        except IndexError:\n            return None\n\n    def find_chamber_by_pin(self, pin):\n        for chamber in self.occupied_chambers:\n            if pin == chamber.user.pin:\n                return chamber\n        return None\n\n    def count_available(self):\n        return len(self.available_chambers)\n\n    def __len__(self):\n        return len(self.chambers)\n\n    def __repr__(self):\n        return '<LOCKER: {} of {} Available>:'.format(self.count_available(),\n                                                      len(self))\n\nlocker = Locker(4)\n\nif __name__ == '__main__':\n\n    # Start locker\n    while True:\n\n        pin = raw_input('Locker Idle. Enter Unique PIN:')\n        chamber = locker.find_chamber_by_pin(pin)\n\n        if chamber:\n            chamber.release()\n\n        else:\n            chamber = locker.find_available_chamber()\n            if chamber:\n                user = User.create_user(pin)\n                chamber.reserve(user)\n\n            else:\n                print('Chambers Full. Wait for relase.')\n\n        print('New Status: ', locker)\n",
			"file": "locker_db.py",
			"file_size": 1710,
			"file_write_time": 131023017290320476,
			"settings":
			{
				"buffer_size": 1710,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "#!\n# Raspberry Pi x\n# Setup\n# BCM\n# Keypad 1x4\n\n\nimport RPi.GPIO as rpi\nimport time\n\ndef pi_init():\n    rpi.setmode(rpi.BCM)\n    #rpi.setmode(rpi.BOARD)\n\n    print 'rpi Ready'\n\n    ports = [21,22,23,24]\n    for n, port in enumerate(ports):\n        rpi.setup(port, rpi.IN, pull_up_down=rpi.PUD_DOWN)\n\ndef pi_cleanup():\n    rpi.cleanup()\n\ndef get_keypress():\n    for n, port in enumerate(ports):\n        if rpi.input(port):\n            return n + 1\n\nrpi.setup(5, rpi.OUT)\n\ndef blink_up():\n    rpi.output(5, 1)\n\ndef blink_down():\n    rpi.output(5, 0)\n\ndef get_digit():\n    while True:\n        digit = get_keypress()\n        if digit:\n            print 'key press detected: ', digit\n            blink_up()\n            while get_keypress():\n                pass\n            blink_down()\n            print 'key released: ', digit\n            break\n    return digit\n\n\ndef get_pin(length):\n    pi_init()\n    try:\n        pin = []\n        print 'Please enter your pin ({})'.format(length)\n        for i in range(length):\n            pin.append(get_digit())\n            print pin\n\n        print 'PIN: ', PIN\n        pi_cleanup()\n        return pin\n\n\n    except KeyboardInterrupt:\n        rpi.cleanup()\n        print 'Exiting... rpi cleanned'\n        return None\n",
			"file": "key.py",
			"file_size": 1252,
			"file_write_time": 131023017276640476,
			"settings":
			{
				"buffer_size": 1252,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "Table already exis",
			"settings":
			{
				"buffer_size": 18,
				"line_ending": "Unix",
				"name": "Build output",
				"scratch": true
			}
		},
		{
			"contents": "Locker Initialized.\n('Chamber Initialized: ', <CHAMBER 0:False>:None)\n('Chamber Initialized: ', <CHAMBER 1:False>:None)\n('Chamber Initialized: ', <CHAMBER 2:False>:None)\n('Chamber Initialized: ', <CHAMBER 3:False>:None)\n('Locker Created: ', <LOCKER: 4 of 4 Available>:)\nTable already exists\nTable already exists\nTable already exists\nTraceback (most recent call last):\n  File \"/home/nwf/dev/repos/locker/locker_db.py\", line 88, in <module>\n    pin = raw_input('Locker Idle. Enter Unique PIN:')\nEOFError: EOF when reading a line\nLocker Idle. Enter Unique PIN:[Finished in 0.1s with exit code 1]\n[shell_cmd: \"/home/nwf/dev/.virtualenvs/locker/bin/python\" -u \"/home/nwf/dev/repos/locker/locker_db.py\"]\n[dir: /home/nwf/dev/repos/locker]\n[path: /home/nwf/.rvm/gems/ruby-2.2.1/bin:/home/nwf/.rvm/gems/ruby-2.2.1@global/bin:/home/nwf/.rvm/rubies/ruby-2.2.1/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/home/nwf/.rvm/bin]",
			"settings":
			{
				"buffer_size": 961,
				"line_ending": "Unix",
				"name": "Build output",
				"scratch": true
			}
		}
	],
	"build_system": "Anaconda Python Builder",
	"build_system_choices":
	[
		[
			[
				[
					"Anaconda Python Builder",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Anaconda Python Builder",
				""
			]
		],
		[
			[
				[
					"Anaconda Python Builder",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				],
				[
					"Packages/SublimeREPL/sublimerepl_build_system_hack.sublime-build",
					""
				],
				[
					"Packages/User/terminal.sublime-build",
					""
				]
			],
			[
				"Anaconda Python Builder",
				""
			]
		],
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 146.0,
		"last_filter": "terminal",
		"selected_items":
		[
			[
				"terminal",
				"Build With: terminal"
			],
			[
				"bui",
				"Build With: terminal"
			],
			[
				"run",
				"SublimeREPL: Python - RUN current file"
			],
			[
				"build",
				"Build With: terminal"
			],
			[
				"curr",
				"SublimeREPL: Python - PDB current file"
			],
			[
				"curre",
				"SublimeREPL: Python - RUN current file"
			],
			[
				"repl",
				"SublimeREPL: Python"
			],
			[
				"g: ",
				"Goto: Line…"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"doc",
				"Python Docstrings: Fold"
			],
			[
				"remo",
				"Package Control: Remove Package"
			],
			[
				"color",
				"Color Picker"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"goto",
				"Goto: Definition…"
			],
			[
				"doct",
				"Python Docstrings: Fold"
			],
			[
				"new snipt",
				"New Snippet…"
			],
			[
				"pyth",
				"Set Syntax: Python"
			],
			[
				"disable",
				"Package Control: Disable Package"
			],
			[
				"set html",
				"Set Syntax: HTML"
			],
			[
				"comment	",
				"Toggle Block Comment"
			],
			[
				"djang	",
				"Snippet: Django template blocktrans"
			],
			[
				"django",
				"Set Syntax: HTML (Django)"
			],
			[
				"set syntax dj",
				"Set Syntax: Python (Django)"
			],
			[
				"packages",
				"Package Control: List Packages"
			],
			[
				"fold",
				"Code Folding: Fold"
			],
			[
				"json",
				"Set Syntax: JSON"
			],
			[
				"unf",
				"Code Folding: Unfold"
			],
			[
				"git",
				"GitGutter: Compare Against Branch"
			],
			[
				"virtu	",
				"SublimeREPL: Python - virtualenv"
			],
			[
				"vir",
				"SublimeREPL: Python - virtualenv"
			],
			[
				"virtu",
				"SublimeREPL: Python - virtualenv"
			],
			[
				"virtual",
				"SublimeREPL: Python - virtualenv"
			],
			[
				"syntax ",
				"Set Syntax: Logfile"
			],
			[
				"set log",
				"Set Syntax: Logfile"
			],
			[
				"run cu",
				"SublimeREPL: Python - RUN current file"
			],
			[
				"current",
				"SublimeREPL: Python - PDB current file"
			],
			[
				"browse",
				"Preferences: Browse Packages"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"traceb",
				"Traceback: Go To Line"
			],
			[
				"traceback",
				"Traceback: Go To Line"
			],
			[
				"python",
				"Set Syntax: Python"
			],
			[
				"module",
				"Set Syntax: Python module path"
			],
			[
				"upp	",
				"Convert Case: Upper Case"
			],
			[
				"upp",
				"Convert Case: Upper Case"
			],
			[
				"upper",
				"Convert Case: Upper Case"
			],
			[
				"unfol",
				"Code Folding: Unfold"
			],
			[
				"fol",
				"Fold Python : fold depth 1"
			],
			[
				"synt",
				"Set Syntax: Logfile"
			],
			[
				"log",
				"Set Syntax: LaTeX Log"
			],
			[
				"case",
				"Convert Case: Title Case"
			],
			[
				"disa",
				"Package Control: Disable Package"
			],
			[
				"isntal",
				"Colorsublime: Install Theme"
			],
			[
				"go to li",
				"Goto: Line…"
			],
			[
				"anac",
				"Anaconda: Goto object definition"
			],
			[
				"anax",
				"Anaconda: Next lint error"
			],
			[
				"remove ",
				"Package Control: Remove Package"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"anaconda",
				"Anaconda: Find object usage"
			],
			[
				"vintage",
				"Package Control: Advanced Install Package"
			],
			[
				"gutter",
				"View: Toggle Gutter"
			],
			[
				"enable",
				"Package Control: Enable Package"
			],
			[
				"disab",
				"Package Control: Disable Package"
			],
			[
				"ena",
				"Package Control: Enable Package"
			],
			[
				"enab",
				"Package Control: Enable Package"
			],
			[
				"Package Control: ",
				"Package Control: Disable Package"
			],
			[
				"html",
				"HTML: Encode Special Characters"
			],
			[
				"install ",
				"Package Control: Install Package"
			],
			[
				"docs",
				"Python Docstrings: Fold"
			],
			[
				"jin",
				"Set Syntax: HTML (Jinja2)"
			],
			[
				"rein",
				"Indentation: Reindent Lines"
			],
			[
				"task",
				"Tasks: New document"
			],
			[
				"bang",
				"Bang Search"
			],
			[
				"index",
				"Code Search Index"
			],
			[
				"jinj",
				"Set Syntax: HTML (Jinja2)"
			],
			[
				"reint",
				"Indentation: Reindent Lines"
			],
			[
				"list",
				"Package Control: List Packages"
			],
			[
				"fold doc",
				"Fold Python : show documentation"
			],
			[
				"doc string",
				"Python Docstrings: Fold"
			],
			[
				"key",
				"Preferences: Key Bindings - User"
			],
			[
				"high vis",
				"BracketHighlighter: Toggle High Visibility Mode"
			],
			[
				"user",
				"Preferences: Settings - User"
			],
			[
				"glue",
				"Glue - Launch"
			],
			[
				"ji",
				"Set Syntax: HTML (Jinja2)"
			],
			[
				"re",
				"Indentation: Reindent Lines"
			],
			[
				"ind",
				"Indentation: Reindent Lines"
			],
			[
				"inde",
				"Indentation: Reindent Lines"
			],
			[
				"tag",
				"Tag: Auto-Format Tags on Selection"
			],
			[
				"inder",
				"Indentation: Reindent Lines"
			],
			[
				"format",
				"Tag: Auto-Format Tags on Document"
			],
			[
				"git ",
				"Git: Graph All"
			],
			[
				"terminali",
				"Terminality: Browse Commands..."
			],
			[
				"terminality",
				"Terminality: Browse Commands..."
			],
			[
				"termi",
				"Preferences: Terminality Settings – Default"
			],
			[
				"termina",
				"Preferences: Terminality Key Bindings – Default"
			],
			[
				"termin",
				"Preferences: Terminal Key Bindings – Default"
			],
			[
				"lsit",
				"Package Control: List Packages"
			],
			[
				"in",
				"Package Control: Install Package"
			],
			[
				"syntaxfold",
				"Preferences: SyntaxFold Keybindings - Default"
			]
		],
		"width": 381.0
	},
	"console":
	{
		"height": 139.0,
		"history":
		[
			"gedit app.py",
			"tetst",
			"import urllib.request,os,hashlib; h = 'eb2297e1a458f27d836c04bb0cbaf282' + 'd0e7a3098092775ccb37ca9d6b2e4b7d'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/nwf/dev/repos/locker"
	],
	"file_history":
	[
		"/home/nwf/dev/repos/locker/model_helper.py",
		"/home/nwf/dev/repos/dashboard-advisor/.dashboard.sublime-project",
		"/home/nwf/dev/repos/dj_portal/sublime_dj_portal.sublime-project",
		"/home/nwf/dev/repos/locker/.locker.sublime-project",
		"/home/nwf/.config/sublime-text-3/Packages/User/terminal.sublime-build",
		"/home/nwf/dev/repos/misc/locker/locker.py",
		"/home/nwf/dev/repos/misc/locker.py",
		"/home/nwf/.config/sublime-text-3/Packages/User/Default (Linux).sublime-keymap",
		"/home/nwf/.config/sublime-text-3/Packages/SublimeREPL/SublimeREPL.sublime-settings",
		"/home/nwf/.config/sublime-text-3/Packages/User/SublimeREPL.sublime-settings",
		"/home/nwf/dev/repos/dashboard-advisor/lib/phone_bill/grammar.rb",
		"/home/nwf/dev/repos/dashboard-advisor/log/parser.log",
		"/home/nwf/dev/repos/dj_portal/forms.py",
		"/home/nwf/dev/repos/dj_portal/portal/forms.py",
		"/home/nwf/dev/repos/dj_portal/portal/templates/accounts/logged_out.html",
		"/home/nwf/dev/repos/dj_portal/portal/templates/accounts/login.html~",
		"/home/nwf/dev/repos/dj_portal/portal/bb/helper.py",
		"/home/nwf/dev/repos/dj_portal/portal/bb/time_helper.py",
		"/home/nwf/dev/repos/dj_portal/portal/__init__.py",
		"/home/nwf/dev/repos/dj_portal/fixtures.json",
		"/home/nwf/dev/repos/dj_portal/fixtures2.json",
		"/home/nwf/dev/repos/dj_portal/portal/urls.py",
		"/home/nwf/dev/repos/dj_portal/dj_portal/urls.py",
		"/home/nwf/dev/repos/dj_portal/portal/templates/base.html",
		"/home/nwf/dev/repos/dj_portal/portal/admin.py",
		"/home/nwf/dev/repos/dj_portal/portal/templates/_menu_main.html",
		"/home/nwf/dev/repos/dj_portal/portal/templates/units.html",
		"/home/nwf/dev/repos/dj_portal/portal/cron.py",
		"/home/nwf/dev/repos/dj_portal/portal/static/css/main-theme.css",
		"/home/nwf/dev/repos/dj_portal/portal/static/js/main.js",
		"/home/nwf/dev/repos/dj_portal/portal/bb/data/units.json",
		"/usr/lib/python2.7/collections.py",
		"/home/nwf/dev/repos/dj_portal/portal/static/tables/bootstrap-table.css",
		"/home/nwf/dev/repos/dj_portal/portal/static/css/bootstrap.css",
		"/home/nwf/dev/repos/dj_portal/portal/static/css/bootstrap-theme.css",
		"/home/nwf/dev/repos/dj_portal/portal/templates/base_panel.html",
		"/home/nwf/dev/repos/dj_portal/portal/static/css/main.css",
		"/home/nwf/dev/repos/dj_portal/dj_portal/settings.py",
		"/home/nwf/dev/repos/dj_portal/portal/bb/tests.py",
		"/home/nwf/dev/repos/dj_portal/portal/bb/core.py",
		"/home/nwf/dev/repos/portal_br/portal_app/static/css/main.css",
		"/home/nwf/dev/repos/dj_portal/portal/tests.py",
		"/home/nwf/dev/repos/dj_portal/portal/views.py",
		"/home/nwf/dev/repos/dj_portal/portal/static/css/unit_table.css",
		"/home/nwf/dev/repos/portal_br/portal_app/static/css/main-theme.css",
		"/home/nwf/dev/repos/dj_portal/portal/static/js/bootstrap.js",
		"/home/nwf/dev/.virtualenvs/dj_portal/local/lib/python2.7/site-packages/dateutil/parser.py",
		"/home/nwf/dev/.virtualenvs/dj_portal/local/lib/python2.7/site-packages/dateutil/tz.py",
		"/home/nwf/.config/sublime-text-3/Packages/User/Preferences.sublime-settings",
		"/home/nwf/dev/repos/dj_portal/dj_portal/logger_config.py",
		"/home/nwf/.config/sublime-text-3/Packages/User/Python.sublime-settings",
		"/home/nwf/.config/sublime-text-3/Packages/User/Python Django.sublime-settings",
		"/home/nwf/dev/repos/misc/logger_init.py",
		"/home/nwf/dev/repos/dj_portal/dj_portal/__init__.py",
		"/home/nwf/dev/repos/dj_portal/dj_portal/logger_config.json",
		"/home/nwf/dev/repos/dj_portal/dj_portal/logger_init.py",
		"/home/nwf/dev/repos/dj_portal/portal/models.py",
		"/home/nwf/dev/.virtualenvs/dj_portal/local/lib/python2.7/site-packages/django/__init__.py",
		"/home/nwf/dev/repos/dj_portal/portal/bb/__init__.py",
		"/home/nwf/dev/repos/dj_portal/todo.TODO",
		"/home/nwf/Desktop/nyc.todo",
		"/home/nwf/dev/repos/dj_portal/portal/templates/portal.html",
		"/home/nwf/dev/repos/dj_portal/portal/logger_init.py",
		"/home/nwf/dev/repos/dashboard-advisor/.gitignore",
		"/home/nwf/dev/repos/dashboard-advisor/app/assets/stylesheets/application.scss",
		"/home/nwf/dev/repos/dashboard-advisor/app/views/devise/sessions/new.html.erb",
		"/home/nwf/dev/repos/dashboard-advisor/app/views/home/index.html.erb",
		"/home/nwf/dev/repos/dashboard-advisor/app/views/layouts/application.html.erb",
		"/home/nwf/dev/repos/portal_br/portal_app/views.py",
		"/home/nwf/dev/repos/dj_portal/portal/templates/_alerts.html",
		"/home/nwf/dev/repos/dj_portal/portal/templates/accounts/login.html",
		"/home/nwf/dev/repos/dj_portal/portal/templates/accounts/_footer.html",
		"/home/nwf/dev/repos/dj_portal/portal/templates/old temps/_menu_main.html",
		"/home/nwf/dev/repos/dj_portal/portal/templates/registration/base.html",
		"/home/nwf/dev/repos/dj_portal/portal/templates/registration/password_reset_form.html",
		"/home/nwf/dev/repos/dj_portal/portal/templates/accounts/stock/logout.html",
		"/home/nwf/dev/repos/dj_portal/portal/templates/registration/password_change_done.html",
		"/home/nwf/dev/repos/dj_portal/portal/templates/registration/_menu.html",
		"/home/nwf/dev/repos/dj_portal/portal/templates/registration/logged_out.html",
		"/home/nwf/dev/repos/dj_portal/portal/templates/registration/login.html",
		"/home/nwf/dev/repos/dj_portal/portal/templates/old temps/_alerts.html",
		"/home/nwf/dev/repos/dj_portal/portal/templates/old temps/_macros_main.html",
		"/home/nwf/dev/repos/dj_portal/portal/templates/registration/_registration_menu.html",
		"/home/nwf/dev/repos/dj_portal/portal/templates/registration/login_user.html",
		"/home/nwf/dev/.virtualenvs/dj_portal/local/lib/python2.7/site-packages/django/http/response.py",
		"/home/nwf/dev/.virtualenvs/dj_portal/local/lib/python2.7/site-packages/django/conf/urls/__init__.py",
		"/home/nwf/dev/repos/dj_portal/units/models.py",
		"/home/nwf/dev/repos/dj_portal/units/admin.py",
		"/home/nwf/dev/repos/dj_portal/portal/apps.py",
		"/home/nwf/dev/repos/dj_portal/fixtures-units.json",
		"/home/nwf/.config/sublime-text-3/Packages/Anaconda/Default (Linux).sublime-keymap",
		"/home/nwf/.config/sublime-text-3/Packages/Python Open Module (New)/Python Open Module (New).sublime-settings",
		"/home/nwf/dev/repos/dj_portal/units/views.py",
		"/home/nwf/dev/repos/dj_portal/units/urls.py",
		"/home/nwf/dev/repos/dj_portal/portal/migrations/0002_auto_20160118_1104.py",
		"/home/nwf/dev/repos/dj_portal/fixture.json",
		"/home/nwf/dev/repos/dj_portal/units/apps.py",
		"/home/nwf/dev/repos/dj_portal/units/__init__.py",
		"/home/nwf/dev/.virtualenvs/dj_portal/lib/python2.7/site-packages/django/conf/__init__.py",
		"/home/nwf/dev/repos/dj_portal/dj_portal/wsgi.py",
		"/home/nwf/dev/repos/pdf-parser/search-nodes.py",
		"/home/nwf/.config/sublime-text-3/Packages/SublimeREPL/config/Python/Main.sublime-menu",
		"/home/nwf/.config/sublime-text-3/Packages/SublimeREPL/lang_integration.py",
		"/home/nwf/.config/sublime-text-3/Packages/SublimeREPL/config/Python/Default.sublime-commands",
		"/home/nwf/.config/sublime-text-3/Packages/SublimeREPL/sublimerepl.py",
		"/home/nwf/dev/repos/pdf-parser/pdfplay.sublime-project",
		"/home/nwf/.config/sublime-text-3/Packages/User/Python Open Module (New).sublime-settings",
		"/home/nwf/dev/.virtualenvs/pdf-parser/lib/python2.7/re.py",
		"/home/nwf/dev/repos/pdf-parser/node.py",
		"/home/nwf/dev/repos/pdf-parser/csv2",
		"/home/nwf/dev/repos/pdf-parser/text_parser.py",
		"/home/nwf/dev/repos/pdf-parser/vivotext2.txt",
		"/usr/lib/python2.7/pickle.py",
		"/home/nwf/dev/repos/pdf-parser/csv",
		"/home/nwf/dev/repos/pdf-parser/search.py",
		"/home/nwf/dev/repos/pdf-parser/delete-csv-test.csv",
		"/home/nwf/dev/repos/pdf-parser/clarotext2.txt",
		"/home/nwf/dev/repos/pdf-parser/cacheclaro.p",
		"/home/nwf/dev/repos/d3htmltest.html",
		"/home/nwf/dev/repos/treeData.json",
		"/home/nwf/dev/repos/pdf-parser/jsonserializer.py",
		"/home/nwf/dev/repos/pdf-parser/dict-class.py",
		"/home/nwf/dev/repos/pdf-parser/pdf_to_txt.py",
		"/home/nwf/dev/repos/pdf-parser/cachevivo.p",
		"/home/nwf/dev/repos/pdf-parser/pic.py",
		"/home/nwf/dev/repos/pdf-parser/p",
		"/home/nwf/dev/repos/pdf-parser/python",
		"/home/nwf/.config/sublime-text-3/Packages/User/View In Browser.sublime-settings"
	],
	"find":
	{
		"height": 29.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"active",
			"datetime",
			"User",
			":",
			"print",
			":\n",
			"chambers.values()",
			"first_available_chamber",
			"get_chamber_by_pin",
			"True",
			"()",
			" label",
			"label",
			"form-gro",
			"form-group ",
			"form-gro",
			"label",
			"form-gr",
			"migrat",
			"sess",
			"conte",
			",\n",
			"ap",
			"label",
			"content",
			"logg",
			"status_unexpected",
			"icon",
			"is-",
			"get_js",
			"json",
			"online",
			"info",
			"print",
			"get_dict",
			"ged_dict",
			"unit_id",
			"id",
			"get_j",
			"json",
			"last_",
			"Rio Design Leblon",
			"sys",
			"logger",
			"warni",
			"acti",
			"active",
			"update",
			"updated",
			"update",
			"dump",
			".chamber",
			"chamb",
			"last_ope",
			"3058",
			"Chamber(",
			"Chamber()",
			"null",
			"last_",
			"        ",
			"\n    ",
			"last_fo",
			"last_fo	",
			"chamb",
			"p_software_version",
			"comme",
			"updated",
			"total",
			"temp",
			"total_units",
			"total",
			"keys",
			"door_st",
			"statu",
			"prett",
			"int(",
			".id",
			"hours_since_checkin",
			"unit",
			"error",
			"def tzname",
			"tzname",
			")\n",
			"04:00",
			"est",
			"()):\n",
			"true",
			"django",
			"true",
			"config",
			"true",
			"with",
			"set",
			"ret",
			"open ",
			"could",
			"error",
			"alert",
			"info",
			"auth_",
			"django.contrib.auth",
			"auth_views",
			"registration",
			"label",
			"form-control",
			"form",
			">\n",
			"menu",
			"main",
			"recife",
			"app_l",
			"content_",
			"app_",
			"units",
			"unit_id",
			"impor",
			"repl_open",
			"run",
			"python_virtualenv_paths",
			"TOKENS_GROUP_PAT",
			"-",
			"DICT",
			"dict",
			"DICT",
			"TOKENS_GROUP_PAT",
			"subt",
			"subto",
			"subt"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"chambers",
			"chamers",
			"find_available_chamber",
			"find_chamber_by_pin",
			"psoftware_version",
			".unit_id",
			"unit_id",
			"hours_since",
			"True",
			"",
			"auth",
			"django.contrib.auth",
			"accounts",
			"portal",
			"}}",
			"{{",
			"",
			"last_level1_added",
			"root",
			"",
			"op",
			"results",
			"TOKENS_JOINED",
			"get_siblings",
			"iter_tree_down",
			"new_child",
			"print_node",
			"print_tree",
			"phone_start_match",
			"phone_start",
			"operator",
			"page_number_text",
			"pdf_page_number",
			"search_match",
			"\"Open Sans\"",
			"35B59A",
			"print_pretty_json_data",
			"<td",
			"iso_timestamp_delta",
			"portal_app",
			"h3",
			"filepath",
			"items",
			"UNITS_JSON_URL",
			"self.s",
			"g.user",
			"uid",
			"1786AA",
			"app.logger",
			"col-sm-9",
			"col-sm-3",
			"\"",
			"BABABA",
			"999999",
			"1F2F4A",
			"263957",
			"1F2F4A",
			"263957",
			"0E254F",
			"1C3D7A",
			"1D446E",
			"193059",
			"E268CD",
			"3C3C3C",
			"static"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "model.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2698,
						"regions":
						{
						},
						"selection":
						[
							[
								2567,
								2567
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/Djaneiro/Syntaxes/Python Django.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 966.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "locker_db.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1710,
						"regions":
						{
						},
						"selection":
						[
							[
								79,
								79
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/Djaneiro/Syntaxes/Python Django.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "key.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1252,
						"regions":
						{
						},
						"selection":
						[
							[
								841,
								841
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"syntax": "Packages/Djaneiro/Syntaxes/Python Django.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 378.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				}
			]
		},
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 3,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 18,
						"regions":
						{
						},
						"selection":
						[
							[
								18,
								18
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 4,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 961,
						"regions":
						{
						},
						"selection":
						[
							[
								961,
								961
							]
						],
						"settings":
						{
							"BracketHighlighterBusy": false,
							"bh_regions":
							[
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content"
							],
							"default_dir": "/home/nwf/dev/repos/locker",
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 159.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 22.0
	},
	"input":
	{
		"height": 33.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				0,
				1,
				1,
				2
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			0.612021857924,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 201.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": ".locker.sublime-project",
	"replace":
	{
		"height": 54.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"admin",
				"portal_app/templates/admin/index.html"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"",
				"~/dev/repos/portal_br/portal_br.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 56.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 378.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 78.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
